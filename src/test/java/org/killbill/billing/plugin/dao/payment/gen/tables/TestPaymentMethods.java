/*
 * This file is generated by jOOQ.
*/
package org.killbill.billing.plugin.dao.payment.gen.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;
import org.killbill.billing.plugin.dao.payment.gen.Keys;
import org.killbill.billing.plugin.dao.payment.gen.Killbill;
import org.killbill.billing.plugin.dao.payment.gen.tables.records.TestPaymentMethodsRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TestPaymentMethods extends TableImpl<TestPaymentMethodsRecord> {

    private static final long serialVersionUID = 1221056637;

    /**
     * The reference instance of <code>killbill.test_payment_methods</code>
     */
    public static final TestPaymentMethods TEST_PAYMENT_METHODS = new TestPaymentMethods();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TestPaymentMethodsRecord> getRecordType() {
        return TestPaymentMethodsRecord.class;
    }

    /**
     * The column <code>killbill.test_payment_methods.record_id</code>.
     */
    public final TableField<TestPaymentMethodsRecord, ULong> RECORD_ID = createField("record_id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>killbill.test_payment_methods.kb_payment_method_id</code>.
     */
    public final TableField<TestPaymentMethodsRecord, String> KB_PAYMENT_METHOD_ID = createField("kb_payment_method_id", org.jooq.impl.SQLDataType.CHAR.length(36).nullable(false), this, "");

    /**
     * The column <code>killbill.test_payment_methods.kb_account_id</code>.
     */
    public final TableField<TestPaymentMethodsRecord, String> KB_ACCOUNT_ID = createField("kb_account_id", org.jooq.impl.SQLDataType.CHAR.length(36).nullable(false), this, "");

    /**
     * The column <code>killbill.test_payment_methods.kb_tenant_id</code>.
     */
    public final TableField<TestPaymentMethodsRecord, String> KB_TENANT_ID = createField("kb_tenant_id", org.jooq.impl.SQLDataType.CHAR.length(36).nullable(false), this, "");

    /**
     * The column <code>killbill.test_payment_methods.cc_first_name</code>.
     */
    public final TableField<TestPaymentMethodsRecord, String> CC_FIRST_NAME = createField("cc_first_name", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>killbill.test_payment_methods.cc_last_name</code>.
     */
    public final TableField<TestPaymentMethodsRecord, String> CC_LAST_NAME = createField("cc_last_name", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>killbill.test_payment_methods.cc_type</code>.
     */
    public final TableField<TestPaymentMethodsRecord, String> CC_TYPE = createField("cc_type", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>killbill.test_payment_methods.cc_exp_month</code>.
     */
    public final TableField<TestPaymentMethodsRecord, String> CC_EXP_MONTH = createField("cc_exp_month", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>killbill.test_payment_methods.cc_exp_year</code>.
     */
    public final TableField<TestPaymentMethodsRecord, String> CC_EXP_YEAR = createField("cc_exp_year", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>killbill.test_payment_methods.cc_number</code>.
     */
    public final TableField<TestPaymentMethodsRecord, String> CC_NUMBER = createField("cc_number", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>killbill.test_payment_methods.cc_last_4</code>.
     */
    public final TableField<TestPaymentMethodsRecord, String> CC_LAST_4 = createField("cc_last_4", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>killbill.test_payment_methods.cc_start_month</code>.
     */
    public final TableField<TestPaymentMethodsRecord, String> CC_START_MONTH = createField("cc_start_month", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>killbill.test_payment_methods.cc_start_year</code>.
     */
    public final TableField<TestPaymentMethodsRecord, String> CC_START_YEAR = createField("cc_start_year", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>killbill.test_payment_methods.cc_issue_number</code>.
     */
    public final TableField<TestPaymentMethodsRecord, String> CC_ISSUE_NUMBER = createField("cc_issue_number", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>killbill.test_payment_methods.cc_verification_value</code>.
     */
    public final TableField<TestPaymentMethodsRecord, String> CC_VERIFICATION_VALUE = createField("cc_verification_value", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>killbill.test_payment_methods.cc_track_data</code>.
     */
    public final TableField<TestPaymentMethodsRecord, String> CC_TRACK_DATA = createField("cc_track_data", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>killbill.test_payment_methods.address1</code>.
     */
    public final TableField<TestPaymentMethodsRecord, String> ADDRESS1 = createField("address1", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>killbill.test_payment_methods.address2</code>.
     */
    public final TableField<TestPaymentMethodsRecord, String> ADDRESS2 = createField("address2", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>killbill.test_payment_methods.city</code>.
     */
    public final TableField<TestPaymentMethodsRecord, String> CITY = createField("city", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>killbill.test_payment_methods.state</code>.
     */
    public final TableField<TestPaymentMethodsRecord, String> STATE = createField("state", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>killbill.test_payment_methods.zip</code>.
     */
    public final TableField<TestPaymentMethodsRecord, String> ZIP = createField("zip", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>killbill.test_payment_methods.country</code>.
     */
    public final TableField<TestPaymentMethodsRecord, String> COUNTRY = createField("country", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>killbill.test_payment_methods.token</code>.
     */
    public final TableField<TestPaymentMethodsRecord, String> TOKEN = createField("token", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>killbill.test_payment_methods.additional_data</code>.
     */
    public final TableField<TestPaymentMethodsRecord, String> ADDITIONAL_DATA = createField("additional_data", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>killbill.test_payment_methods.is_default</code>.
     */
    public final TableField<TestPaymentMethodsRecord, Short> IS_DEFAULT = createField("is_default", org.jooq.impl.SQLDataType.SMALLINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.SMALLINT)), this, "");

    /**
     * The column <code>killbill.test_payment_methods.is_deleted</code>.
     */
    public final TableField<TestPaymentMethodsRecord, Short> IS_DELETED = createField("is_deleted", org.jooq.impl.SQLDataType.SMALLINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.SMALLINT)), this, "");

    /**
     * The column <code>killbill.test_payment_methods.created_date</code>.
     */
    public final TableField<TestPaymentMethodsRecord, Timestamp> CREATED_DATE = createField("created_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>killbill.test_payment_methods.updated_date</code>.
     */
    public final TableField<TestPaymentMethodsRecord, Timestamp> UPDATED_DATE = createField("updated_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * Create a <code>killbill.test_payment_methods</code> table reference
     */
    public TestPaymentMethods() {
        this("test_payment_methods", null);
    }

    /**
     * Create an aliased <code>killbill.test_payment_methods</code> table reference
     */
    public TestPaymentMethods(String alias) {
        this(alias, TEST_PAYMENT_METHODS);
    }

    private TestPaymentMethods(String alias, Table<TestPaymentMethodsRecord> aliased) {
        this(alias, aliased, null);
    }

    private TestPaymentMethods(String alias, Table<TestPaymentMethodsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Killbill.KILLBILL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TestPaymentMethodsRecord, ULong> getIdentity() {
        return Keys.IDENTITY_TEST_PAYMENT_METHODS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TestPaymentMethodsRecord> getPrimaryKey() {
        return Keys.KEY_TEST_PAYMENT_METHODS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TestPaymentMethodsRecord>> getKeys() {
        return Arrays.<UniqueKey<TestPaymentMethodsRecord>>asList(Keys.KEY_TEST_PAYMENT_METHODS_PRIMARY, Keys.KEY_TEST_PAYMENT_METHODS_RECORD_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TestPaymentMethods as(String alias) {
        return new TestPaymentMethods(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TestPaymentMethods rename(String name) {
        return new TestPaymentMethods(name, null);
    }
}
